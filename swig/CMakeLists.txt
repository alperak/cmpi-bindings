#
# CMakeLists.txt for cmpi-bindings/swig
#

enable_testing()

IF (BUILD_PYTHON3)
  IF (BUILD_PYTHON2)
    MESSAGE(FATAL_ERROR " Can't build Python2 and Python3, use -DBUILD_PYTHON2=YES **or** -DBUILD_PYTHON3=YES")
  ENDIF (BUILD_PYTHON2)
  find_package (Python3 COMPONENTS Interpreter Development)
  IF (NOT Python3_FOUND)
    MESSAGE(ERROR "Can't find Python3")
  ELSE (NOT Python3_FOUND)
    MESSAGE(STATUS "Building with Python3")
    SET(PYTHON_EXECUTABLE ${Python3_EXECUTABLE})
    SET(PYTHON_INCLUDE_PATH ${Python3_INCLUDE_DIRS})
    SET(PYTHON_LIBRARIES ${Python3_LIBRARIES})
    SET(PYTHON_LDFLAGS ${Python3_LDFLAGS})
    SET(PYTHON_LIB_DIR ${Python3_LIBRARY_DIRS})
    SET(PYTHON_SITE_DIR ${Python3_SITE_DIR})
#    SET(PYTHON_MAJOR_VERSION ${Python3_VERSION_MAJOR})
#    SET(PYTHON_MINOR_VERSION ${Python3_VERSION_MINOR})
    ADD_SUBDIRECTORY(python)
  ENDIF (NOT Python3_FOUND)
ELSEIF (BUILD_PYTHON2)
  IF (BUILD_PYTHON3)
    MESSAGE(FATAL_ERROR "Can't build Python2 and Python3 at the same time, use -DBUILD_PYTHON2=YES **or** -DBUILD_PYTHON3=YES")
  ENDIF (BUILD_PYTHON3)

  find_package (Python2 COMPONENTS Interpreter Development)
  IF (NOT Python2_FOUND)
    MESSAGE(ERROR "Can't find Python2")
  ELSE (NOT Python2_FOUND)
    MESSAGE(STATUS "Building with Python2")
    SET(PYTHON_EXECUTABLE ${Python2_EXECUTABLE})
    SET(PYTHON_INCLUDE_PATH ${Python2_INCLUDE_DIRS})
    SET(PYTHON_LIBRARIES ${Python2_LIBRARIES})
    SET(PYTHON_LDFLAGS ${Python2_LDFLAGS})
    SET(PYTHON_LIB_DIR ${Python2_LIBRARY_DIRS})
    SET(PYTHON_SITE_DIR ${Python2_SITE_DIR})
    SET(PYTHON_MAJOR_VERSION ${Python2_VERSION_MAJOR})
    SET(PYTHON_MINOR_VERSION ${Python2_VERSION_MINOR})
    ADD_SUBDIRECTORY(python)
  ENDIF (NOT Python2_FOUND)
ELSE (BUILD_PYTHON2)
  MESSAGE(STATUS "*****")
  MESSAGE(STATUS "\tSkipping Python build")
  MESSAGE(STATUS "*****")
ENDIF (BUILD_PYTHON3)

FIND_PACKAGE(Perl)
IF (PERL_EXECUTABLE)
  MESSAGE(STATUS "Building Perl...")
  ADD_SUBDIRECTORY(perl)
ENDIF (PERL_EXECUTABLE)

FIND_PACKAGE(Ruby)
IF (RUBY_LIBRARY AND RUBY_INCLUDE_PATH)
  MESSAGE(STATUS "Building Ruby...")
  ADD_SUBDIRECTORY(ruby)
  OPTION( BUILD_RUBY_GEM "Build Ruby GEM" YES )
ENDIF (RUBY_LIBRARY AND RUBY_INCLUDE_PATH)
